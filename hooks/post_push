#!/usr/bin/env bash

set -o nounset

# Load build information
eval $(docker run --rm $IMAGE_NAME cat build.info)


FDD_LENSES_VERSION=${FDD_LKD_VERSION:-}

# MODE=fdd
# if [[ -n $FDD_LENSES_VERSION ]]; then
#     MODE=box
# fi

# Master should publish fast-data-dev:latest
if [[ $BUILD_BRANCH == master ]]; then
    # 'landooop/fast-data-dev:latest' is pushed automatically

    # Also push to lensesio/fast-data-dev
    docker tag $IMAGE_NAME lensesio/fast-data-dev:latest
    docker push lensesio/fast-data-dev:latest
fi

# FDD branches should publish minor and major version tags
# Note: For this to work, docker hub landoop/fast-data-dev should be set to build on push on these branches
# So, new branch? Go fix docker hub.
if [[ $BUILD_BRANCH =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && [[ -n $FDD_LKD_VERSION ]]; then
    # BUILD_BRANCH is the same as FDD_LKD_VERSION, e.g 2.2.1
    # 'landoop/fast-data-dev:$BUILD_BRANCH is pushed automatically

    # Also push 'lensesio/fast-data-dev:$BUILD_BRANCH'
    docker tag $IMAGE_NAME lensesio/fast-data-dev:$BUILD_BRANCH
    docker push lensesio/fast-data-dev:$BUILD_BRANCH

    MAJOR_VERSION="$(sed -r -e 's/^([0-9]+\.[0-9]+)\.[0-9]+$/\1/' <<<"$FDD_LKD_VERSION")"
    # Also push 'landoop/fast-data-dev:$MAJOR_VERSION'
    docker tag $IMAGE_NAME landoop/fast-data-dev:$MAJOR_VERSION
    docker push landoop/fast-data-dev:$MAJOR_VERSION

    # Also push 'lensesio/fast-data-dev:$MAJOR_VERSION
    docker tag $IMAGE_NAME lensesio/fast-data-dev:$MAJOR_VERSION
    docker push lensesio/fast-data-dev:$MAJOR_VERSION
fi

# Lenses should publish kafka-lenses-dev:latest and box:latest
if [[ $BUILD_BRANCH == lenses ]]; then
    # 'landooop/kafka-lenses-dev:latest' is pushed automatically

    # Also push to lensesio/box
    docker tag $IMAGE_NAME lensesio/box:latest
    docker push lensesio/box:latest
fi

# Lenses Box branches should publish minor and major version tags
# Note: For this to work, docker hub landoop/kafka-lenses-dev should be set to build on push on these branches
# So, new branch? Go fix docker hub.
if [[ $BUILD_BRANCH =~ ^lenses-development/lkd-[0-9]+\.[0-9]+/[0-9]+\.[0-9]+$ ]] && [[ -n $FDD_LENSES_VERSION ]]; then
    # BUILD_BRANCH is the same as the major version of Lenses
    # 'landoop/kafka-lenses-dev:[LENSES_MAJOR_VERSION] is pushed automatically

    LENSES_MAJOR_VERSION="$(sed -r -e 's/^([0-9]+\.[0-9]+)\.[0-9]+$/\1/' <<<"$FDD_LENSES_VERSION")"

    if [[ -z $LENSES_MAJOR_VERSION ]]; then
        echo "Lenses major version not detected: $LENSES_MAJOR_VERSION"
        exit 1
    fi

    # Also push 'lensesio/box:$LENSES_MAJOR_VERSION'
    docker tag $IMAGE_NAME lensesio/box:$LENSES_MAJOR_VERSION
    docker push lensesio/box:$LENSES_MAJOR_VERSION


    # Also push 'landoop/kafka-lenses-dev:$FDD_LENSES_VERSION'
    docker tag $IMAGE_NAME landoop/kafka-lenses-dev:$FDD_LENSES_VERSION
    docker push landoop/kafka-lenses-dev:$FDD_LENSES_VERSION

    # Also push 'lensesio/box:$FDD_LENSES_VERSION'
    docker tag $IMAGE_NAME lensesio/box:$FDD_LENSES_VERSION
    docker push lensesio/box:$FDD_LENSES_VERSION
fi
